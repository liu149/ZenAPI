steps:
  # Conditional build step
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      if [ "${_BUILD_IMAGE}" = "true" ]; then
        docker build -t gcr.io/$PROJECT_ID/zenapi-app:${_IMAGE_TAG} .
        docker push gcr.io/$PROJECT_ID/zenapi-app:${_IMAGE_TAG}
      else
        echo "Checking if image exists..."
        if ! docker pull gcr.io/$PROJECT_ID/zenapi-app:${_IMAGE_TAG}; then
          echo "Error: Image gcr.io/$PROJECT_ID/zenapi-app:${_IMAGE_TAG} does not exist"
          exit 1
        fi
        echo "Image exists, proceeding with deployment"
      fi
    id: 'build-and-push'

  # Update the deployment configuration
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      sed -i "s|gcr.io/PROJECT_ID/zenapi-app:TAG|gcr.io/$PROJECT_ID/zenapi-app:${_IMAGE_TAG}|" gke-deployment.yaml
    id: 'update-config'

  # Deploy to GKE
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
    - 'apply'
    - '-f'
    - 'gke-deployment.yaml'
    env:
    - 'CLOUDSDK_COMPUTE_ZONE=asia-east1'
    - 'CLOUDSDK_CONTAINER_CLUSTER=my-gke'
    - 'CLOUDSDK_CORE_PROJECT=$PROJECT_ID'
    id: 'deploy'

# Substitutions
substitutions:
  _IMAGE_TAG: 'latest'  # Default value, can be overridden
  _BUILD_IMAGE: 'true'  # Default to building image, can be overridden

# Optionally, you can add a timeout
timeout: '1800s'