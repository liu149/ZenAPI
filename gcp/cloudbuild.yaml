options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # Install dependencies
  - name: 'python:3.10'
    entrypoint: pip
    args: ['install', '-r', 'requirements.txt']

  # Run tests
  - name: 'python:3.10'
    entrypoint: pytest
    args: ['src']

  # Conditional step: Build and push the Docker image (if tests pass)
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      if [ "${_BUILD_IMAGE}" = "true" ]; then
        docker build -t gcr.io/$PROJECT_ID/zenapi-app:${_VERSION} .
        docker push gcr.io/$PROJECT_ID/zenapi-app:${_VERSION}
      else
        echo "Skipping image build and push"
      fi
    id: 'build-and-push'

  # Update the deployment configuration
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      sed -i "s|gcr.io/PROJECT_ID/zenapi-app:TAG|gcr.io/$PROJECT_ID/zenapi-app:${_VERSION}|" gcp/gke-deployment.yaml
    id: 'update-config'

  # Configure kubectl
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      gcloud container clusters get-credentials ${_CLOUDSDK_CONTAINER_CLUSTER} --zone ${_CLOUDSDK_COMPUTE_ZONE} --project $PROJECT_ID
      kubectl config view --raw > /workspace/kubeconfig
    id: 'configure-kubectl'

  # Conditional step: Apply or delete resources
  - name: 'gcr.io/cloud-builders/kubectl'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      export KUBECONFIG=/workspace/kubeconfig
      if [ "${_ACTION}" = "apply" ]; then
        kubectl apply -f gcp/external-dns-sa.yaml
        kubectl apply -f gcp/external-dns-deployment.yaml
        kubectl apply -f gcp/gke-deployment.yaml
      elif [ "${_ACTION}" = "delete" ]; then
        kubectl delete -f gcp/gke-deployment.yaml
        kubectl delete -f gcp/external-dns-deployment.yaml
        kubectl delete -f gcp/external-dns-sa.yaml
      else
        echo "Invalid action specified. Use 'apply' or 'delete'."
        exit 1
      fi
    env:
    - 'CLOUDSDK_COMPUTE_ZONE=${_CLOUDSDK_COMPUTE_ZONE}'
    - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLOUDSDK_CONTAINER_CLUSTER}'
    id: 'manage-resources'

# Substitutions
substitutions:
  _CLOUDSDK_COMPUTE_ZONE: 'asia-east1'  # Default zone
  _CLOUDSDK_CONTAINER_CLUSTER: 'my-gke'  # Default cluster name
  _VERSION: 'latest'  # Default version tag
  _BUILD_IMAGE: 'true'  # Whether to build and push the image
  _ACTION: 'apply'  # Action to perform: 'apply' or 'delete'

# Optionally, you can add a timeout
timeout: '1800s'