steps:
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/zenapi-app:${_VERSION}', '.']
    id: 'build'

  # Push the image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/zenapi-app:${_VERSION}']
    id: 'push'

  # Run tests
  # - name: 'gcr.io/$PROJECT_ID/zenapi-app:${_VERSION}'
  #   entrypoint: 'python'
  #   args: ['-m', 'pytest', 'tests/']
  #   id: 'test'

  # Update the deployment configuration
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      sed -i "s|gcr.io/PROJECT_ID/zenapi-app:TAG|gcr.io/$PROJECT_ID/zenapi-app:${_VERSION}|" gcp/gke-deployment.yaml
    id: 'update-config'

  # Deploy External DNS ServiceAccount and RBAC
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'gcp/external-dns-sa.yaml']
    env:
    - 'CLOUDSDK_COMPUTE_ZONE=${_CLOUDSDK_COMPUTE_ZONE}'
    - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLOUDSDK_CONTAINER_CLUSTER}'
    id: 'deploy-external-dns-sa'

  # Deploy External DNS
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'gcp/external-dns-deployment.yaml']
    env:
    - 'CLOUDSDK_COMPUTE_ZONE=${_CLOUDSDK_COMPUTE_ZONE}'
    - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLOUDSDK_CONTAINER_CLUSTER}'
    id: 'deploy-external-dns'

  # Deploy to GKE
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'gcp/gke-deployment.yaml']
    env:
    - 'CLOUDSDK_COMPUTE_ZONE=${_CLOUDSDK_COMPUTE_ZONE}'
    - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLOUDSDK_CONTAINER_CLUSTER}'
    id: 'deploy-gke'

# Images to push
images:
  - 'gcr.io/$PROJECT_ID/zenapi-app:${_VERSION}'

# Substitutions
substitutions:
  _CLOUDSDK_COMPUTE_ZONE: 'asia-east1'  # Default zone
  _CLOUDSDK_CONTAINER_CLUSTER: 'my-gke'  # Default cluster name
  _VERSION: 'latest'  # Default version tag

# Optionally, you can add a timeout
timeout: '1800s'